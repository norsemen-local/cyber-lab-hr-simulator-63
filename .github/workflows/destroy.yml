
name: Destroy AWS Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "destroy" to confirm deletion of all resources'
        required: true
        type: string

jobs:
  destroy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.confirmation == 'destroy' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
      
      - name: Check if environment exists
        id: check_environment
        run: |
          cd terraform
          if terraform state list | grep -q "aws_instance.hr_portal_ec2"; then
            echo "Environment exists and will be destroyed"
            echo "environment_exists=true" >> $GITHUB_OUTPUT
          else
            echo "No environment found to destroy"
            echo "environment_exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Cancel if no environment exists
        if: ${{ steps.check_environment.outputs.environment_exists != 'true' }}
        run: |
          echo "No infrastructure found to destroy. Exiting."
          exit 0
      
      - name: Terraform Destroy
        if: ${{ steps.check_environment.outputs.environment_exists == 'true' }}
        run: |
          cd terraform
          terraform destroy -auto-approve -var="db_username=admin" -var="db_password=password123"
          
      - name: Confirmation
        if: ${{ steps.check_environment.outputs.environment_exists == 'true' }}
        run: |
          echo "All AWS resources have been successfully destroyed."
