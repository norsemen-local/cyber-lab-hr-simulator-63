
name: HR Portal - Verify SSM Agent
on:
  workflow_call:
    inputs:
      instance_id:
        description: 'EC2 instance ID'
        type: string
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  verify_ssm:
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Verify SSM agent is working
        if: ${{ inputs.instance_id != 'unavailable' }}
        run: |
          INSTANCE_ID=${{ inputs.instance_id }}
          
          if [ "$INSTANCE_ID" == "unavailable" ]; then
            echo "Instance ID not available. Skipping SSM verification."
            exit 0
          fi
          
          echo "Verifying SSM agent status on instance $INSTANCE_ID..."
          
          # Check if instance is already registered with SSM
          SSM_ONLINE=$(aws ssm describe-instance-information --filters "Key=InstanceIds,Values=$INSTANCE_ID" --query "InstanceInformationList[0].PingStatus" --output text 2>/dev/null || echo "ConnectionLost")
          
          echo "SSM Agent status: $SSM_ONLINE"
          
          # If SSM is working, we're done
          if [ "$SSM_ONLINE" == "Online" ]; then
            echo "SSM Agent is online and working properly."
            exit 0
          fi
          
          # Otherwise try to restart the SSM agent via user data script
          echo "SSM Agent is not online. Attempting recovery..."
          
          # Try to recover the SSM agent by sending a custom command
          # This command will try to restart the SSM agent
          aws ec2 modify-instance-attribute --instance-id $INSTANCE_ID --attribute userData --value "$(cat <<EOF | base64
          #!/bin/bash
          echo "Attempting to recover SSM agent at $(date)" > /tmp/ssm-recovery.log
          amazon-linux-extras install -y amazon-ssm-agent >> /tmp/ssm-recovery.log 2>&1
          systemctl enable amazon-ssm-agent >> /tmp/ssm-recovery.log 2>&1
          systemctl restart amazon-ssm-agent >> /tmp/ssm-recovery.log 2>&1
          echo "SSM agent restarted at $(date)" >> /tmp/ssm-recovery.log
          EOF
          )"
          
          # Wait for the recovery to take effect
          echo "Waiting for SSM agent recovery (120 seconds)..."
          sleep 120
          
          # Check again if recovery was successful
          SSM_ONLINE_AFTER=$(aws ssm describe-instance-information --filters "Key=InstanceIds,Values=$INSTANCE_ID" --query "InstanceInformationList[0].PingStatus" --output text 2>/dev/null || echo "ConnectionLost")
          
          echo "SSM Agent status after recovery attempt: $SSM_ONLINE_AFTER"
          
          if [ "$SSM_ONLINE_AFTER" == "Online" ]; then
            echo "SSM Agent recovery successful."
          else
            echo "SSM Agent recovery failed, but continuing with workflow."
            echo "WARNING: Subsequent deployment steps may fail without SSM connectivity."
          fi
