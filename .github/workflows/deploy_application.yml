
name: HR Portal - Deploy Application
on:
  workflow_call:
    inputs:
      instance_id:
        description: 'EC2 instance ID'
        type: string
        required: true
      ec2_ip:
        description: 'EC2 IP address'
        type: string
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy_application:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Build Docker image
        if: ${{ inputs.instance_id != 'unavailable' }}
        run: |
          # Build the Docker image locally in the GitHub Actions runner
          echo "Building Docker image..."
          docker build -t hr-portal-app:latest .
          docker save hr-portal-app:latest > hr-portal-app.tar
          
          # Create temporary S3 bucket with unique name 
          BUCKET_NAME="hr-portal-docker-temp-$(date +%s)"
          echo "Creating temporary S3 bucket: $BUCKET_NAME"
          aws s3 mb s3://$BUCKET_NAME
          
          # Upload Docker image to S3
          echo "Uploading Docker image to S3..."
          aws s3 cp hr-portal-app.tar s3://$BUCKET_NAME/
      
      - name: Deploy application
        if: ${{ inputs.instance_id != 'unavailable' }}
        run: |
          INSTANCE_ID=${{ inputs.instance_id }}
          EC2_IP=${{ inputs.ec2_ip }}
          BUCKET_NAME="hr-portal-docker-temp-$(date +%s -d '1 minute ago')"
          
          if [ "$INSTANCE_ID" == "unavailable" ]; then
            echo "Instance ID not available. Skipping deployment."
            exit 0
          fi
          
          echo "Deploying Docker container to EC2..."
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=InstanceIds,Values=$INSTANCE_ID" \
            --parameters "commands=[
              'echo \"Starting Docker deployment at $(date)\"',
              'aws s3 cp s3://$BUCKET_NAME/hr-portal-app.tar /tmp/',
              'docker load -i /tmp/hr-portal-app.tar',
              'docker stop hr-portal-container || true',
              'docker rm hr-portal-container || true',
              'docker run -d --name hr-portal-container -p 80:80 -e API_GATEWAY_ALLOW_ALL=true hr-portal-app:latest',
              'echo \"Docker container status:\"',
              'docker ps',
              'curl -s http://localhost || echo \"Could not connect to web server\"'
            ]" \
            --comment "Deploy HR Portal Docker container"
            
          # Clean up S3 bucket
          echo "Cleaning up S3 bucket..."
          aws s3 rm s3://$BUCKET_NAME/hr-portal-app.tar
          aws s3 rb s3://$BUCKET_NAME
